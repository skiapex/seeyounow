# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)


# Deletes everything from the database so that you start fresh
puts "Deleting all records from the database..."
puts "Deleting all User from the database..."
User.delete_all
puts "Deleting all Clinician from the database..."
Clinician.delete_all
puts "Deleting all Patient from the database..."
Patient.delete_all
puts "Deleting all Gender from the database..."
Gender.delete_all
puts "Deleting all Inputter from the database..."
Inputter.delete_all
puts "Deleting all EsasAssessment from the database..."
EsasAssessment.delete_all
puts "Deleting all PrfsAssessment from the database..."
PrfsAssessment.delete_all
puts "Deleting all Comment from the database..."
Comment.delete_all
puts "Deleting all Note from the database..."
Note.delete_all
puts "Deleting all NotificationSetting from the database..."
NotificationSetting.delete_all
puts "Deleting all CareGroup from the database..."
CareGroup.delete_all
puts "Deleting all OtherSymptom from the database..."
OtherSymptom.delete_all
puts "Deleting all Occupation from the database..."
Occupation.delete_all
puts "Deleting all Speciality from the database..."
Speciality.delete_all
puts "Deleting all CareGiver from the database..."
CareGiver.delete_all
puts "Deleting all CareGroupAssignment from the database..."
CareGroupAssignment.delete_all


puts "Creating gender types..."
# Create different possible genders
male = Gender.create(gender_type: "male")
female = Gender.create(gender_type: "female")
transgender = Gender.create(gender_type: "transgender")

puts "Creating additional symptom types..."
# Create different symptom types
none = OtherSymptom.create(symptom_type: "none")
constipation = OtherSymptom.create(symptom_type: "constipation")
sweating = OtherSymptom.create(symptom_type: "sweating")
urine = OtherSymptom.create(symptom_type: "discoloured urine")
respiratorycongestion = OtherSymptom.create(symptom_type: "respiratory congestion")
drymouth = OtherSymptom.create(symptom_type: "dry mouth")
hiccups = OtherSymptom.create(symptom_type: "hiccups")
anorexiacachexia = OtherSymptom.create(symptom_type: "anorexiaâ€“cachexia")
diarrhea = OtherSymptom.create(symptom_type: "diarrhea")
delirium = OtherSymptom.create(symptom_type: "delirium")
insomnia = OtherSymptom.create(symptom_type: "insomnia")
terminalrestlessness = OtherSymptom.create(symptom_type: "terminal restlessness")
vomiting = OtherSymptom.create(symptom_type: "vomiting")

puts "Creating inputter types..."
# Create different possible inputter types
partner = Inputter.create(inputter_type: "Partner")
wife = Inputter.create(inputter_type: "Wife")
husband = Inputter.create(inputter_type: "Husband")
son = Inputter.create(inputter_type: "Son")
daughter = Inputter.create(inputter_type: "Daughter")
grandchild = Inputter.create(inputter_type: "Grandchild")
mother = Inputter.create(inputter_type: "Mother")
father = Inputter.create(inputter_type: "Father")
friend = Inputter.create(inputter_type: "Friend")
clinician = Inputter.create(inputter_type: "Medical team")
care_aid = Inputter.create(inputter_type: "Care aid")
sister = Inputter.create(inputter_type: "Sister")
brother = Inputter.create(inputter_type: "Brother")
soninlaw = Inputter.create(inputter_type: "Son in Law")
daughterinlaw = Inputter.create(inputter_type: "Daughter in Law")
other = Inputter.create(inputter_type: "Other")

puts "Creating occupations..."
# Create different occupations
physician = Occupation.create(name: "Physician", pronym: "Dr.", acronym: nil)
rn = Occupation.create(name: "Registered Nurse", pronym: nil, acronym: "RN")
nursepractitioner = Occupation.create(name: "Nurse Practitioner", pronym: nil, acronym: "NP")
rpn = Occupation.create(name: "Registered Practical Nurse", pronym: nil, acronym: "RPN")
physiotherapist = Occupation.create(name: "Physiotherapist", pronym: nil, acronym: "PT")
dietician = Occupation.create(name: "Dietician", pronym: nil, acronym: nil)
social = Occupation.create(name: "Social Worker", pronym: nil, acronym: nil)
ot = Occupation.create(name: "Occupational Therapist", pronym: nil, acronym: "OT")
lpn = Occupation.create(name: "Licensed Practical Nurse", pronym: nil, acronym: "LPN")
rpsyn = Occupation.create(name: "Registered Psychiatric Nurse", pronym: nil, acronym: "RPN")
hcadmin = Occupation.create(name: "Healthcare Administrator", pronym: nil, acronym: nil)
chpcn = Occupation.create(name: "Certified in Hospice and Palliative Care Nurse", pronym: nil, acronym: "RN, CHPCN")
cns = Occupation.create(name: "Clinican Nurse Specialist", pronym: nil, acronym: "RN, CNS")

puts "Creating specialities..."
# Create different specialist physicians
gp = Speciality.create(name: "Family Physician", occupation_id: physician.id)
firstyear = Speciality.create(name: "Resident of Family Medicine; first year", occupation_id: physician.id)
secondyear = Speciality.create(name: "Resident of Family Medicine; second year", occupation_id: physician.id)
anesthetist = Speciality.create(name: "Anesthetist", occupation_id: physician.id)
cardiologist = Speciality.create(name: "Cardiologist", occupation_id: physician.id)
immunologist = Speciality.create(name: "Clinical Immunologist-allergist", occupation_id: physician.id)
dermatologist = Speciality.create(name: "Dermatologist", occupation_id: physician.id)
radiologist = Speciality.create(name: "Diagnostic Radiologist", occupation_id: physician.id)
emergency = Speciality.create(name: "Emergency Physician", occupation_id: physician.id)
endocrinologist = Speciality.create(name: "Endocrinologist", occupation_id: physician.id)
gastroenterologist = Speciality.create(name: "Gastroenterologist", occupation_id: physician.id)
geriatrician = Speciality.create(name: "Geriatrician", occupation_id: physician.id)
hematologist = Speciality.create(name: "Hematologist", occupation_id: physician.id)
nephrologist = Speciality.create(name: "Nephrologist", occupation_id: physician.id)
neurologist = Speciality.create(name: "Neurologist", occupation_id: physician.id)
oncologist = Speciality.create(name: "Oncologist", occupation_id: physician.id)
orthopedist = Speciality.create(name: "Orthopedist", occupation_id: physician.id)
pediatrician = Speciality.create(name: "Pediatrician", occupation_id: physician.id)
physiatrist = Speciality.create(name: "Physiatrist", occupation_id: physician.id)
pneumologist = Speciality.create(name: "Pneumologist", occupation_id: physician.id)
psychiatrist = Speciality.create(name: "Psychiatrist", occupation_id: physician.id)
radiation_oncologist = Speciality.create(name: "Radiation Oncologist", occupation_id: physician.id)
respirologist = Speciality.create(name: "Respirologist", occupation_id: physician.id)
rheumatologist = Speciality.create(name: "Rheumatologist", occupation_id: physician.id)
anatomical = Speciality.create(name: "Anatomical Pathologist", occupation_id: physician.id)
general = Speciality.create(name: "General Pathologist", occupation_id: physician.id)
hematopathologist = Speciality.create(name: "Hematopathologist", occupation_id: physician.id)
biochemist = Speciality.create(name: "Medical Biochemist", occupation_id: physician.id)
microbiologist = Speciality.create(name: "Medical Microbiologist", occupation_id: physician.id)
neuropathologist = Speciality.create(name: "Neuropathologist", occupation_id: physician.id)
cardiac_surgeon = Speciality.create(name: "Cardiac Surgeon", occupation_id: physician.id)
general_surgeon = Speciality.create(name: "General Surgeon", occupation_id: physician.id)
neurosurgeon = Speciality.create(name: "Neurosurgeon", occupation_id: physician.id)
ophthalmologist = Speciality.create(name: "Ophthalmologist", occupation_id: physician.id)
orthopedic_surgeon = Speciality.create(name: "Orthopedic Surgeon", occupation_id: physician.id)
otorhinolaryngologist = Speciality.create(name: "Otorhinolaryngologist", occupation_id: physician.id)
pediatric_surgeon = Speciality.create(name: "Pediatric Surgeon", occupation_id: physician.id)
plastic_surgeon = Speciality.create(name: "Plastic Surgeon", occupation_id: physician.id)
thoracic_surgeon = Speciality.create(name: "Thoracic Surgeon", occupation_id: physician.id)
urologist = Speciality.create(name: "Urologist", occupation_id: physician.id)
vascular_surgeon = Speciality.create(name: "Vascular Surgeon", occupation_id: physician.id)
hospitalist = Speciality.create(name: "Hospitalist", occupation_id: physician.id)

cardiovascular_nursing = Speciality.create(name: "Cardiovascular Nursing", occupation_id: rn.id)
community_nursing = Speciality.create(name: "Community Health Nursing", occupation_id: rn.id)
critical_nursing = Speciality.create(name: "Critical Care Nursing", occupation_id: rn.id)
pediatric_nursing = Speciality.create(name: "Critical Care Pediatric Nursing", occupation_id: rn.id)
emergency_nursing = Speciality.create(name: "Emergency Nursing", occupation_id: rn.id)
enterostomal_nursing = Speciality.create(name: "Enterostomal Therapy Nursing", occupation_id: rn.id)
gastroenterology_nursing = Speciality.create(name: "Gastroenterology Nursing", occupation_id: rn.id)
gerontological_nursing = Speciality.create(name: "Gerontological Nursing", occupation_id: rn.id)
hospice_nursing = Speciality.create(name: "Hospice Palliative Care Nursing", occupation_id: rn.id)
surgical_nursing = Speciality.create(name: "Medical-Surgical Nursing", occupation_id: rn.id)
nephrology_nursing = Speciality.create(name: "Nephrology Nursing", occupation_id: rn.id)
neuroscience_nursing = Speciality.create(name: "Neuroscience Nursing", occupation_id: rn.id)
oh_nursing = Speciality.create(name: "Occupational Health Nursing", occupation_id: rn.id)
oncology_nursing = Speciality.create(name: "Oncology Nursing", occupation_id: rn.id)
orthopaedic_nursing = Speciality.create(name: "Orthopaedic Nursing", occupation_id: rn.id)
perianesthesia_nursing = Speciality.create(name: "Peri Anesthesia Nursing", occupation_id: rn.id)
perinatal_nursing = Speciality.create(name: "Perinatal Nursing", occupation_id: rn.id)
perioperative_nursing = Speciality.create(name: "Perioperative Nursing", occupation_id: rn.id)
palliative_nursing = Speciality.create(name: "Palliative Nursing", occupation_id: rn.id)
psychiatric_nursing = Speciality.create(name: "Psychiatric and Mental Health Nursing", occupation_id: rn.id)
rehabilitation_nursing = Speciality.create(name: "Rehabilitation Nursing", occupation_id: rn.id)
rncns = Speciality.create(name: "Clinican Nurse Specialist", occupation_id: rn.id)

chpcn_cardiovascular_nursing = Speciality.create(name: "Cardiovascular Nursing", occupation_id: chpcn.id)
chpcn_community_nursing = Speciality.create(name: "Community Health Nursing", occupation_id: chpcn.id)
chpcn_critical_nursing = Speciality.create(name: "Critical Care Nursing", occupation_id: chpcn.id)
chpcn_pediatric_nursing = Speciality.create(name: "Critical Care Pediatric Nursing", occupation_id: chpcn.id)
chpcn_emergency_nursing = Speciality.create(name: "Emergency Nursing", occupation_id: chpcn.id)
chpcn_enterostomal_nursing = Speciality.create(name: "Enterostomal Therapy Nursing", occupation_id: chpcn.id)
chpcn_gastroenterology_nursing = Speciality.create(name: "Gastroenterology Nursing", occupation_id: chpcn.id)
chpcn_gerontological_nursing = Speciality.create(name: "Gerontological Nursing", occupation_id: chpcn.id)
chpcn_hospice_nursing = Speciality.create(name: "Hospice Palliative Care Nursing", occupation_id: chpcn.id)
chpcn_surgical_nursing = Speciality.create(name: "Medical-Surgical Nursing", occupation_id: chpcn.id)
chpcn_nephrology_nursing = Speciality.create(name: "Nephrology Nursing", occupation_id: chpcn.id)
chpcn_neuroscience_nursing = Speciality.create(name: "Neuroscience Nursing", occupation_id: chpcn.id)
chpcn_oh_nursing = Speciality.create(name: "Occupational Health Nursing", occupation_id: chpcn.id)
chpcn_oncology_nursing = Speciality.create(name: "Oncology Nursing", occupation_id: chpcn.id)
chpcn_orthopaedic_nursing = Speciality.create(name: "Orthopaedic Nursing", occupation_id: chpcn.id)
chpcn_perianesthesia_nursing = Speciality.create(name: "Peri Anesthesia Nursing", occupation_id: chpcn.id)
chpcn_perinatal_nursing = Speciality.create(name: "Perinatal Nursing", occupation_id: chpcn.id)
chpcn_perioperative_nursing = Speciality.create(name: "Perioperative Nursing", occupation_id: chpcn.id)
chpcn_palliative_nursing = Speciality.create(name: "Palliative Nursing", occupation_id: chpcn.id)
chpcn_psychiatric_nursing = Speciality.create(name: "Psychiatric and Mental Health Nursing", occupation_id: chpcn.id)
chpcn_rehabilitation_nursing = Speciality.create(name: "Rehabilitation Nursing", occupation_id: chpcn.id)
chpcn_cns = Speciality.create(name: "Clinican Nurse Specialist", occupation_id: chpcn.id)

cns_palliative = Speciality.create(name: "Clinical Nurse Specialist in Palliative Care", occupation_id: cns.id)

primary_health_care = Speciality.create(name: "Primary Health Care", occupation_id: nursepractitioner.id)
adult = Speciality.create(name: "Adult", occupation_id: nursepractitioner.id)
pediatric = Speciality.create(name: "Pediatric Care", occupation_id: nursepractitioner.id)
anaesthesia = Speciality.create(name: "Anaesthesia", occupation_id: nursepractitioner.id)

social_supervisor = Speciality.create(name: "Social work supervisor", occupation_id: social.id)
social_coord = Speciality.create(name: "Co-ordinator of social work", occupation_id: social.id)
social_medical = Speciality.create(name: "Medical social worker", occupation_id: social.id)
social_psychiatric = Speciality.create(name: "Psychiatric social worker", occupation_id: social.id)

puts "Creating care groups..."
# Create different care groups
brameast = CareGroup.create(name: "Brameast", city: "Brampton", province: "ON", emergency_message: "INSTEAD OF CALLING 911 Your doctor and nurses would like you to call the Brameast Health Care Organization instead. From 8am-8pm call your CCAC nurse at (866) 570-8505, or Amanda at (416) 371-0733 or Dr. Maynard's office at (905) 792-2211. If this is after office hours have closed: from 8pm to 8am or on the weekend please call the on call Brameast physician at (416) 232-5094. Leave a message and your phone number twice so that the on call physician can call you back. Please speak clearly.")
systemadministration = CareGroup.create(name: "System Admin", city: "North Vancouver", province: "BC", emergency_message: "Contact info@seeyounow.ca")

# Create the users
puts "Creating users..."
#system administrator
useradmin = User.create(email: "info@seeyounow.ca", password: "W0930jk72", auth_token: SecureRandom.urlsafe_base64(n=43))

# Patient users
usergailh = User.create(email: "gahis", password: "password", auth_token: SecureRandom.urlsafe_base64)
useramrikg = User.create(email: "Amgos", password: "password", auth_token: SecureRandom.urlsafe_base64)
useratnafug = User.create(email: "Atgob", password: "password", auth_token: SecureRandom.urlsafe_base64)
userharbanss = User.create(email: "hamat", password: "password", auth_token: SecureRandom.urlsafe_base64)
userlihwah = User.create(email: "lihsi", password: "password", auth_token: SecureRandom.urlsafe_base64)
usernalinim = User.create(email: "NaMah", password: "password", auth_token: SecureRandom.urlsafe_base64)
userritab = User.create(email: "Ribhu", password: "password", auth_token: SecureRandom.urlsafe_base64)
userwalterh = User.create(email: "Wahus", password: "password", auth_token: SecureRandom.urlsafe_base64)
userroyele = User.create(email: "roedw", password: "password", auth_token: SecureRandom.urlsafe_base64)
usernabok = User.create(email: "nabok", password: "password", auth_token: SecureRandom.urlsafe_base64)
userdemcl = User.create(email: "Demcl", password: "password", auth_token: SecureRandom.urlsafe_base64)

# Clinician users
userjudymaynard = User.create(email: "judy.maynard@medportal.ca", password: "password", auth_token: SecureRandom.urlsafe_base64)
useramandamaclennen = User.create(email: "palliate.brameast@rogers.com", password: "password", auth_token: SecureRandom.urlsafe_base64)
userjenniferpebenito = User.create(email: "ebrameast@rogers.com", password: "password", auth_token: SecureRandom.urlsafe_base64)
userfionaalmeida = User.create(email: "fiona.almeida@medportal.ca", password: "password", auth_token: SecureRandom.urlsafe_base64)

# Create the clinicians
puts "Creating clinicians..."

administrator = Clinician.create(first_name: "System", last_name: "Admin", occupation_id: physician.id, speciality_id: gp.id, gender_id: male.id, office_number: "(778) 791-4134", mobile_number: "(778) 791-4134", care_group_id: systemadministration.id, administrator: true, user_id: useradmin.id)


judymaynard = Clinician.create(first_name: "Judy", last_name: "Maynard", occupation_id: physician.id, speciality_id: gp.id, gender_id: female.id, office_number: "(905) 792-2212", mobile_number: "(416) 232-5094", care_group_id: brameast.id, administrator: true, user_id: userjudymaynard.id)
amandamaclennen = Clinician.create(first_name: "Amanda", last_name: "MacLennen", occupation_id: rn.id, speciality_id: palliative_nursing.id, gender_id: female.id, office_number: "(905) 792-2212", mobile_number: "(416) 371-0733", care_group_id: brameast.id, administrator: true, user_id: useramandamaclennen.id)
jenniferpebenito = Clinician.create(first_name: "Jennifer", last_name: "Pe Benito", occupation_id: social.id, speciality_id: social_medical.id, gender_id: female.id, office_number: "(905) 792-2212", mobile_number: "(416) 371-0733", care_group_id: brameast.id, administrator: true, user_id: userjenniferpebenito.id)
fionaalmeida = Clinician.create(first_name: "Fiona", last_name: "Almeida", occupation_id: physician.id, speciality_id: firstyear.id, gender_id: female.id, office_number: "(905) 792-2212", mobile_number: "(416) 232-5094", care_group_id: brameast.id, administrator: true, user_id: userfionaalmeida.id)

# Create the patients
puts "Creating patients..."

gailh = Patient.create(first_name: "Gail", last_name: "H", user_id: usergailh.id, diagnosis: "Ovarian cancer", diagnosis_date: "2013-03-01 00:00:01 -0400", gender_id: female.id, birth_date: "1946-08-28 00:00:01 -0400", address: "Hanover Road, Brampton, Ontario", phone_number: "1111111", goals_of_care: "stay at home as long as possible; fiercely independent and lives alone", important_to_you: "does not get along with sister Donna who should not be allowed in at the end", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)
amrikg = Patient.create(first_name: "Amrik", last_name: "G", user_id: useramrikg.id, diagnosis: "Pseudomyxoma Peritonei and Dementia", diagnosis_date: "2014-01-26 00:00:01 -0400", gender_id: male.id, birth_date: "1926-08-28 00:00:01 -0400", address: "116 Eagleridge Drive, Brampton, Ontario", phone_number: "905-753-9323", other_symptom: nil, goals_of_care: "palliate", important_to_you: "Has increasing Dementia and he has lived along time with this diagnosis which no signs of terminal course; will likely die of dementia vs PMP", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)
atnafug = Patient.create(first_name: "Atnafu", last_name: "G", user_id: useratnafug.id, diagnosis: "Leukemia", diagnosis_date: "2008-08-26 00:00:01 -0400", gender_id: male.id, birth_date: "1940-08-28 00:00:01 -0400", address: "1 Luella Cres, Brampton, Ontario", phone_number: "416-509-3740", other_symptom: nil, goals_of_care: "on chemo pill and doing very well", important_to_you: "Originates from Ethiopia; here with wife living with son and his grandkids", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)
harbanss = Patient.create(first_name: "Harbans", last_name: "S", user_id: userharbanss.id, diagnosis: "B Cell Lymphoma", diagnosis_date: "2014-11-26 00:00:01 -0400", gender_id: male.id, birth_date: "1943-08-28 00:00:01 -0400", address: "4 Idaho Road, Brampton, Ontario", phone_number: "416-984-0173", other_symptom: nil, goals_of_care: "He wishes to die at home", important_to_you: "Wife does not want us to talk about his prognosis. She knows but would prefer to not hear anything of it.", care_group_id: brameast.id, patient_deceased: true, patient_archived: false, notification_level: 8, data_viewable: false)
lihwah = Patient.create(first_name: "Li Hwa", last_name: "H", user_id: userlihwah.id, diagnosis: "Non small cell Lung Cancer", diagnosis_date: "2006-08-26 00:00:01 -0400", gender_id: female.id, birth_date: "1959-08-28 00:00:01 -0400", address: "45 Solway Avenue, Brampton, Ontario", phone_number: "905-846-5907", other_symptom: nil, goals_of_care: "comfort and ongoing chemo; not interested in anymore lung biopsies as they pick up dead cells only times 3", important_to_you: "Dr. Nada rajah is her FD and she is not quite ready to switch to our service", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)
nalinim = Patient.create(first_name: "Nalini", last_name: "M", user_id: usernalinim.id, diagnosis: "Metastatic colorectal cancer", diagnosis_date: "2015-01-26 00:00:01 -0400", gender_id: female.id, birth_date: "1974-08-28 00:00:01 -0400", address: "28 Lent Cres, Brampton, Ontario", phone_number: "289-752-8191", other_symptom: nil, goals_of_care: "She is aiming for cure. Will be having tumours surgically removed from the liver. Any treatments will be considered.", important_to_you: "She will likely set the pace of our visits ongoing", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)
ritab = Patient.create(first_name: "Rita", last_name: "B", user_id: userritab.id, diagnosis: "Metastatic Breast Cancer in 2005", diagnosis_date: "2014-08-26 00:00:01 -0400", gender_id: female.id, birth_date: "1955-08-28 00:00:01 -0400", address: "147 Coastline Drive, Brampton, Ontario", phone_number: "905-453-5424", other_symptom: nil, goals_of_care: "palliate", important_to_you: "Strong Sikh religion and knows it is her god who will decide when it is time to go", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)
walterh = Patient.create(first_name: "Walter", last_name: "H", user_id: userwalterh.id, diagnosis: "Metastatic Rectal Cancer", diagnosis_date: "2011-11-26 00:00:01 -0400", gender_id: male.id, birth_date: "1961-08-28 00:00:01 -0400", address: "13 Burt Drive, Brampton, Ontario", phone_number: "905-453-3651", other_symptom: nil, goals_of_care: "Be painfree and so far continue with chemotherapy despite side effects", important_to_you: "Originates from Newfoundland; has 3 kids", care_group_id: brameast.id, patient_deceased: true, patient_archived: true, notification_level: 8, data_viewable: false)
royele = Patient.create(first_name: "Royel", last_name: "E", user_id: userroyele.id, diagnosis: "Large B Cell Lymphoma", diagnosis_date: "2014-10-26 00:00:01 -0400", gender_id: male.id, birth_date: "1946-08-28 00:00:01 -0400", address: "40 Woodsend Run, Brampton, Ontario", phone_number: "647-222-1636", other_symptom: nil, goals_of_care: "palliate", important_to_you: "installed the Bell phones in our Brameast plaza; loved this work", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)
nabok = Patient.create(first_name: "Nadeem", last_name: "B", user_id: usernabok.id, diagnosis: "Cirrhosis and Hepatic Encephalopathy", diagnosis_date: "2010-09-26 00:00:01 -0400", gender_id: female.id, birth_date: "1971-10-12 00:00:01 -0400", address: "12 Fountainview Way (basement), Brampton, Ontario", phone_number: "647-970-5060", other_symptom: nil, goals_of_care: "hoping for liver transplant but otherwise comfort measures", important_to_you: "?social/relationship issues with wife; has a 10 year old daughter; basement home very cluttered", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)
demcl = Patient.create(first_name: "Dennise", last_name: "M", user_id: userdemcl.id, diagnosis: "Metastatic Breast Cancer", diagnosis_date: "2005-09-15 00:00:01 -0400", gender_id: female.id, birth_date: "1959-10-29 00:00:01 -0400", address: "103 Woodsend Run ( basement), Brampton, Ontario", phone_number: "905-462-1553", other_symptom: nil, goals_of_care: "support at home with end of life care", important_to_you: "Christian faith; not keen on taking medications in general; friend Colleen will stay with her nights sometimes and inform children if there is change in status", care_group_id: brameast.id, patient_deceased: false, patient_archived: false, notification_level: 8, data_viewable: false)

puts "Creating care givers..."
# Create the are givers for patients
CareGiver.create(patient_id: gailh.id, inputter_id: grandchild.id, first_name: "Alexandra", last_name: "B", phone_number: nil, other_information: "granddaughter POA")
CareGiver.create(patient_id: amrikg.id, inputter_id: daughterinlaw.id, first_name: "Unknown", last_name: "G", phone_number: nil, other_information: nil)
CareGiver.create(patient_id: amrikg.id, inputter_id: wife.id, first_name: "Unknown", last_name: "G", phone_number: nil, other_information: nil)
CareGiver.create(patient_id: atnafug.id, inputter_id: son.id, first_name: "Unknown", last_name: "G", phone_number: nil, other_information: "patient lives with him")
CareGiver.create(patient_id: harbanss.id, inputter_id: son.id, first_name: "Sukvinder", last_name: "S", phone_number: nil, other_information: nil)
CareGiver.create(patient_id: harbanss.id, inputter_id: wife.id, first_name: "Unknown", last_name: "S", phone_number: nil, other_information: "does not want to hear prognosis")
CareGiver.create(patient_id: lihwah.id, inputter_id: daughter.id, first_name: "Samantha", last_name: "H", phone_number: nil, other_information: nil)
CareGiver.create(patient_id: nalinim.id, inputter_id: husband.id, first_name: "Unknown", last_name: "M", phone_number: nil, other_information: nil)
CareGiver.create(patient_id: ritab.id, inputter_id: husband.id, first_name: "Unknown", last_name: "X", phone_number: nil, other_information: nil)
CareGiver.create(patient_id: walterh.id, inputter_id: other.id, first_name: "Patty", last_name: "X", phone_number: nil, other_information: nil)
CareGiver.create(patient_id: royele.id, inputter_id: wife.id, first_name: "Caroline", last_name: "E", phone_number: nil, other_information: nil)
CareGiver.create(patient_id: demcl.id, inputter_id: friend.id, first_name: "Colleen", last_name: "X", phone_number: nil, other_information: "Will stay with her nights sometimes and inform children if there is change in status")


puts "Creating assessment scores..."
# Create the scores for an ESAS assessment
EsasAssessment.create(patient_id: gailh.id, clinician_id: judymaynard.id, clinician_completed: true, created_at: "2015-08-26 20:47:01 -0400", care_giver_id: nil, pain: 8, pain_comment: "using hydromorph contin 6 mg BID and does not want to use breakthrough unless absolutely necessary", tiredness: 8, tiredness_comment: "sleeping more and more", drowsiness: 1, drowsiness_comment: nil, nausea: 3, nausea_comment: "tumours in belly take her appetite away", lack_of_appetite: 3, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: "no room for lungs to expand as belly gets bigger", depression: 0, depression_comment: nil, anxiety: 3, anxiety_comment: "sometimes abit anxious about falling if she goes out", wellbeing: 4, wellbeing_comment: "Doing better than she ever thought she would be doing at this stage", other_symptom_id: none.id, other_symptom_score: 0, other_symptom_comment: nil, esas_comment: "Doing better than she ever thought she would be doing at this stage", resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: gailh.id, clinician_id: judymaynard.id, clinician_completed: false, created_at: "2015-09-10 14:37:01 -0400", care_giver_id: nil, pain: 7, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 4, drowsiness_comment: nil, nausea: 2, nausea_comment: nil, lack_of_appetite: 1, lack_of_appetite_comment: nil, shortness_of_breath: 6, shortness_of_breath_comment: nil, depression: 0, depression_comment: nil, anxiety: 2, anxiety_comment: "especially when I go out driving to see friends", wellbeing: 5, wellbeing_comment: nil, other_symptom_id: none.id, other_symptom_score: 0, other_symptom_comment: nil, esas_comment: "doing better than expected", resolution: nil, priority_resolved: false)

# Create the scores for an PRFS assessment
PrfsAssessment.create(patient_id: gailh.id, clinician_id: judymaynard.id, clinician_completed: true, created_at: "2015-08-26 21:01:01 -0400", care_giver_id: nil, activity_and_function: 2, prfs_comment: "still getting out with friends at mall occasionally; still driving; had bad fall and black eye last week in parking lot")
PrfsAssessment.create(patient_id: demcl.id, clinician_id: judymaynard.id, clinician_completed: true, created_at: "2015-09-10 14:18:01 -0400", care_giver_id: nil, activity_and_function: 4, prfs_comment: "up to bathroom but very SOB")


puts "Creating care group assignments..."
# Create the patient clinician relationship
CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: gailh.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: gailh.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: gailh.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: amrikg.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: amrikg.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: amrikg.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: atnafug.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: atnafug.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: atnafug.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: harbanss.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: harbanss.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: harbanss.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: lihwah.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: lihwah.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: lihwah.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: nalinim.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: nalinim.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: nalinim.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: ritab.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: ritab.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: ritab.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: walterh.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: walterh.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: walterh.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: royele.id)
CareGroupAssignment.create(clinician_id: jenniferpebenito.id, patient_id: royele.id)
CareGroupAssignment.create(clinician_id: amandamaclennen.id, patient_id: royele.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: nabok.id)

CareGroupAssignment.create(clinician_id: judymaynard.id, patient_id: demcl.id)








puts "Creating the fake data..."
# Create the fake data
# Create different care groups
fraserhealth = CareGroup.create(name: "Springfield Palliative Home Care", city: "Springfield", province: "BC", emergency_message: Faker::Lorem.paragraph(1, false, 3) + " " + Faker::Base.numerify('(604) ###-####') + " or Dr. " + Faker::Name.name + "'s office at " + Faker::Base.numerify('(778) ###-####') + ". " + Faker::Lorem.sentence(3, false, 4))
groupx = CareGroup.create(name: "Greentown Care Group", city: "Greentown", province: "BC", emergency_message: Faker::Lorem.paragraph(1, false, 3) + " " + Faker::Base.numerify('(604) ###-####') + " or Dr. " + Faker::Name.name + "'s office at " + Faker::Base.numerify('(778) ###-####') + ". " + Faker::Lorem.sentence(3, false, 4))
groupy = CareGroup.create(name: Faker::Company.name + " " + Faker::Company.suffix, city: Faker::Address.city, province: "BC", emergency_message: Faker::Lorem.paragraph(1, false, 3) + " " + Faker::Base.numerify('(604) ###-####') + " or Dr. " + Faker::Name.name + "'s office at " + Faker::Base.numerify('(778) ###-####') + ". " + Faker::Lorem.sentence(3, false, 4))
groupz = CareGroup.create(name: Faker::Company.name + " " + Faker::Company.suffix, city: Faker::Address.city, province: "BC", emergency_message: Faker::Lorem.paragraph(1, false, 3) + " " + Faker::Base.numerify('(604) ###-####') + " or Dr. " + Faker::Name.name + "'s office at " + Faker::Base.numerify('(778) ###-####') + ". " + Faker::Lorem.sentence(3, false, 4))
groupw = CareGroup.create(name: Faker::Company.name + " " + Faker::Company.suffix, city: Faker::Address.city, province: "BC", emergency_message: Faker::Lorem.paragraph(1, false, 3) + " " + Faker::Base.numerify('(604) ###-####') + " or Dr. " + Faker::Name.name + "'s office at " + Faker::Base.numerify('(778) ###-####') + ". " + Faker::Lorem.sentence(3, false, 4))
# Clinician users
usero = User.create(email: "palliative@medportal.ca", password:  "password", auth_token: SecureRandom.urlsafe_base64)
userp = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userq = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userr = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
users = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
usert = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
useru = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userv = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userw = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userx = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
usery = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userz = User.create(email: Faker::Internet.email, password:  Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)

o = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: rn.id, speciality_id: critical_nursing.id, gender_id: male.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: usero.id)
p = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: nursepractitioner.id, speciality_id: primary_health_care.id, gender_id: female.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: userp.id)
q = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: physiotherapist.id, speciality_id: nil, gender_id: female.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: userq.id)
r = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: ot.id, speciality_id: nil, gender_id: female.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: userr.id)
s = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: social.id, speciality_id: social_medical.id, gender_id: male.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: users.id)
t = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: dietician.id, speciality_id: nil, gender_id: male.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: usert.id)
u = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: rpn.id, speciality_id: nil, gender_id: female.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: useru.id)
v = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: physician.id, speciality_id: gp.id, gender_id: male.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: userv.id)
w = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: rn.id, speciality_id: hospice_nursing.id, gender_id: female.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: userw.id)
x = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: rn.id, speciality_id: oncology_nursing.id, gender_id: male.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: userx.id)
y = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: social.id, speciality_id: social_medical.id, gender_id: female.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(778) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: usery.id)
z = Clinician.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, occupation_id: physician.id, speciality_id: firstyear.id, gender_id: female.id, office_number: Faker::Base.numerify('(604) ###-####'), mobile_number: Faker::Base.numerify('(647) ###-####'), care_group_id: fraserhealth.id, administrator: true, user_id: userz.id)

# Patient users
puts "Creating users..."
userjohndoe = User.create(email: "johndoe@abc.com", password: "password", auth_token: SecureRandom.urlsafe_base64)
usercindypeters = User.create(email: "c.t.peters12@yahoo.com", password: "password", auth_token: SecureRandom.urlsafe_base64)
useryiwang = User.create(email: "yi_wang@deloitte.com", password: "39yiwang22", auth_token: SecureRandom.urlsafe_base64)
userapwinderbrar = User.create(email: "apwinderb@gmail.com", password: "AB76cats", auth_token: SecureRandom.urlsafe_base64)
userdilmarousseff = User.create(email: "dilma_rousseff@brazil.com", password: "39dilmarousseff22", auth_token: SecureRandom.urlsafe_base64)
userbenjaminlosseau = User.create(email: "benjamin_losseau@gmail.com", password: "AB76dogs", auth_token: SecureRandom.urlsafe_base64)
usergcobisamaqanda = User.create(email: "gcobisa_maqanda@hotmail.com", password: "39gcobisamaqanda22", auth_token: SecureRandom.urlsafe_base64)
usercoreynichols = User.create(email: "corey_nichols@gmail.com", password: "AB76rats", auth_token: SecureRandom.urlsafe_base64)
usertrentterris = User.create(email: "trent_terris@hotmail.com", password: "39trentterris22", auth_token: SecureRandom.urlsafe_base64)
userhannajansson = User.create(email: "hanna_jansson@gmail.com", password: "AB76birds", auth_token: SecureRandom.urlsafe_base64)
usera = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userb = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userc = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userd = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
usere = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userf = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userg = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userh = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
useri = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userj = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userk = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userl = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
userm = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)
usern = User.create(email: Faker::Internet.email, password: Faker::Internet.password, auth_token: SecureRandom.urlsafe_base64)

# Create the patients
puts "Creating patients..."
johndoe = Patient.create(first_name: "John", last_name: "Doe", user_id: userjohndoe.id, diagnosis: "Non-Hodgkin lymphoma", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "12 Bramalea Rd, Springfield, BC", phone_number: "(905) 890-8108", other_symptom: constipation.id, goals_of_care: "Quality of life and freedom from pain", important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
cindypeters = Patient.create(first_name: "Cindy", last_name: "Peters", user_id: usercindypeters.id, diagnosis: "Gastrointestinal cancer", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "4652 Rosebank Cr, Springfield, BC", phone_number: "(905) 489-4875", other_symptom: delirium.id, goals_of_care: "Quality of life and freedom from pain See the birth of my grandchild in February", important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
yiwang = Patient.create(first_name: "Yi", last_name: "Wang", user_id: useryiwang.id, diagnosis: "Congestive heart failure", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "16 Madoc Dr, Springfield, BC", phone_number: "(905) 489-9446", other_symptom: sweating.id, goals_of_care: "Maintenance of function", important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
apwinderbrar = Patient.create(first_name: "Apwinder", last_name: "Brar", user_id: userapwinderbrar.id, diagnosis: "Kidney failure", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "3 Rainstorm Rd, Springfield, BC", phone_number: "(905) 234-9409", other_symptom: urine.id, goals_of_care: "A good death and relief of suffering", important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
dilmarousseff = Patient.create(first_name: "Dilmar", last_name: "Rousseff", user_id: userdilmarousseff.id, diagnosis: "Chronic lower respiratory disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "16 Madoc Dr, Springfield, BC", phone_number: "(905) 489-9446", other_symptom: drymouth.id, goals_of_care: "Maintenance of function", important_to_you: Faker::Lorem.sentence(6, false, 6),  care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
benjaminlosseau = Patient.create(first_name: "Benjamin", last_name: "Llosseau", user_id: userbenjaminlosseau.id, diagnosis: "Diabetes", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "3 Rainstorm Rd, Springfield, BC", phone_number: "(905) 234-9409", other_symptom: constipation.id, goals_of_care: "A good death and relief of suffering", important_to_you: Faker::Lorem.sentence(6, false, 6),  care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
gcobisamaqanda = Patient.create(first_name: "Gcobisa", last_name: "Maqanda", user_id: usergcobisamaqanda.id, diagnosis: "Nephrotic syndrome", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "16 Madoc Dr, Springfield, BC", phone_number: "(905) 489-9446", other_symptom: insomnia.id, goals_of_care: "Maintenance of function", important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
coreynichols = Patient.create(first_name: "Corey", last_name: "Nicols", user_id: usercoreynichols.id, diagnosis: "Congestive heart failure", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "3 Rainstorm Rd, Springfield, BC", phone_number: "(905) 234-9409", other_symptom: respiratorycongestion.id, goals_of_care: "A good death and relief of suffering", important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
trentterris = Patient.create(first_name: "Trent", last_name: "Terris", user_id: usertrentterris.id, diagnosis: "Advanced liver disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "16 Madoc Dr, Springfield, BC", phone_number: "(905) 489-9446", other_symptom: anorexiacachexia.id, goals_of_care: "Maintenance of function", important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: true, patient_archived: true, notification_level: rand(7...9), data_viewable: false)
hannajansson = Patient.create(first_name: "Hanna", last_name: "Jansson", user_id: userhannajansson.id, diagnosis: "Parkinson's disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: "3 Rainstorm Rd, Springfield, BC", phone_number: "(905) 234-9409", other_symptom: diarrhea.id, goals_of_care: "A good death and relief of suffering", important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
a = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: usera.id, diagnosis: "Chronic lower respiratory disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: terminalrestlessness.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
b = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userb.id, diagnosis: "Nephrotic syndrome", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: vomiting.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
c = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userc.id, diagnosis: "Congestive heart failure", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: urine.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
d = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userd.id, diagnosis: "Advanced liver disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: hiccups.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
e = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: usere.id, diagnosis: "Parkinson's disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: insomnia.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: true, patient_archived: true, notification_level: rand(7...9), data_viewable: false)
f = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userf.id, diagnosis: "Kidney failure", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: constipation.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
g = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userg.id, diagnosis: "Chronic lower respiratory disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: male.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: respiratorycongestion.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
h = Patient.create(first_name: "Gail", last_name: "Roberts", user_id: userh.id, diagnosis: "Ovarian Cancer", diagnosis_date: "2013-03-16 00:00:01 -0400", gender_id: female.id, birth_date: "1946-08-28 00:00:01 -0400", address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: anorexiacachexia.id, goals_of_care: "stay at home as long as possible; fiercely independent and lives alone", important_to_you: "does not get along with sister Donna who should not be allowed in at the end",  care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
i = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: useri.id, diagnosis: "Diabetes", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: delirium.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6),  care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
j = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userj.id, diagnosis: "Kidney failure", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: sweating.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6), care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
k = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userk.id, diagnosis: "Non-Hodgkin lymphoma", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: respiratorycongestion.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6),  care_group_id: fraserhealth.id, patient_deceased: true, patient_archived: true, notification_level: rand(7...9), data_viewable: false)
l = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userl.id, diagnosis: "Chronic lower respiratory disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: urine.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6),  care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
m = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: userm.id, diagnosis: "Advanced liver disease", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: insomnia.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6),  care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: false, notification_level: rand(7...9), data_viewable: false)
n = Patient.create(first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, user_id: usern.id, diagnosis: "Congestive heart failure", diagnosis_date: Faker::Time.between(1500.days.ago, Time.now, :day), gender_id: female.id, birth_date: Faker::Time.between(29200.days.ago, Time.now, :day), address: Faker::Address.street_address + " " + Faker::Address.street_suffix + ", Springfield, BC", phone_number: Faker::Base.numerify('(905) ###-####'), other_symptom: terminalrestlessness.id, goals_of_care: Faker::Lorem.sentence(6, false, 6), important_to_you: Faker::Lorem.sentence(6, false, 6),  care_group_id: fraserhealth.id, patient_deceased: false, patient_archived: true)

# Create the patient clinician relationship
CareGroupAssignment.create(clinician_id: o.id, patient_id: johndoe.id)
CareGroupAssignment.create(clinician_id: p.id, patient_id: johndoe.id)
CareGroupAssignment.create(clinician_id: q.id, patient_id: johndoe.id)

CareGroupAssignment.create(clinician_id: o.id, patient_id: cindypeters.id)
CareGroupAssignment.create(clinician_id: p.id, patient_id: cindypeters.id)
CareGroupAssignment.create(clinician_id: q.id, patient_id: cindypeters.id)

CareGroupAssignment.create(clinician_id: r.id, patient_id: yiwang.id)
CareGroupAssignment.create(clinician_id: s.id, patient_id: yiwang.id)
CareGroupAssignment.create(clinician_id: t.id, patient_id: yiwang.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: yiwang.id)

CareGroupAssignment.create(clinician_id: r.id, patient_id: apwinderbrar.id)
CareGroupAssignment.create(clinician_id: s.id, patient_id: apwinderbrar.id)
CareGroupAssignment.create(clinician_id: t.id, patient_id: apwinderbrar.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: apwinderbrar.id)

CareGroupAssignment.create(clinician_id: u.id, patient_id: dilmarousseff.id)
CareGroupAssignment.create(clinician_id: v.id, patient_id: dilmarousseff.id)
CareGroupAssignment.create(clinician_id: w.id, patient_id: dilmarousseff.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: dilmarousseff.id)

CareGroupAssignment.create(clinician_id: u.id, patient_id: benjaminlosseau.id)
CareGroupAssignment.create(clinician_id: v.id, patient_id: benjaminlosseau.id)
CareGroupAssignment.create(clinician_id: w.id, patient_id: benjaminlosseau.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: benjaminlosseau.id)

CareGroupAssignment.create(clinician_id: x.id, patient_id: gcobisamaqanda.id)
CareGroupAssignment.create(clinician_id: y.id, patient_id: gcobisamaqanda.id)
CareGroupAssignment.create(clinician_id: z.id, patient_id: gcobisamaqanda.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: gcobisamaqanda.id)

CareGroupAssignment.create(clinician_id: o.id, patient_id: coreynichols.id)
CareGroupAssignment.create(clinician_id: p.id, patient_id: coreynichols.id)
CareGroupAssignment.create(clinician_id: q.id, patient_id: coreynichols.id)

CareGroupAssignment.create(clinician_id: o.id, patient_id: trentterris.id)
CareGroupAssignment.create(clinician_id: p.id, patient_id: trentterris.id)
CareGroupAssignment.create(clinician_id: q.id, patient_id: trentterris.id)

CareGroupAssignment.create(clinician_id: r.id, patient_id: hannajansson.id)
CareGroupAssignment.create(clinician_id: s.id, patient_id: hannajansson.id)
CareGroupAssignment.create(clinician_id: t.id, patient_id: hannajansson.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: hannajansson.id)

CareGroupAssignment.create(clinician_id: r.id, patient_id: a.id)
CareGroupAssignment.create(clinician_id: s.id, patient_id: a.id)
CareGroupAssignment.create(clinician_id: t.id, patient_id: a.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: a.id)

CareGroupAssignment.create(clinician_id: u.id, patient_id: b.id)
CareGroupAssignment.create(clinician_id: v.id, patient_id: b.id)
CareGroupAssignment.create(clinician_id: w.id, patient_id: b.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: b.id)

CareGroupAssignment.create(clinician_id: u.id, patient_id: c.id)
CareGroupAssignment.create(clinician_id: v.id, patient_id: c.id)
CareGroupAssignment.create(clinician_id: w.id, patient_id: c.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: c.id)

CareGroupAssignment.create(clinician_id: x.id, patient_id: d.id)
CareGroupAssignment.create(clinician_id: y.id, patient_id: d.id)
CareGroupAssignment.create(clinician_id: z.id, patient_id: d.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: d.id)

CareGroupAssignment.create(clinician_id: o.id, patient_id: e.id)
CareGroupAssignment.create(clinician_id: p.id, patient_id: e.id)
CareGroupAssignment.create(clinician_id: q.id, patient_id: e.id)

CareGroupAssignment.create(clinician_id: o.id, patient_id: f.id)
CareGroupAssignment.create(clinician_id: p.id, patient_id: f.id)
CareGroupAssignment.create(clinician_id: q.id, patient_id: f.id)

CareGroupAssignment.create(clinician_id: r.id, patient_id: g.id)
CareGroupAssignment.create(clinician_id: s.id, patient_id: g.id)
CareGroupAssignment.create(clinician_id: t.id, patient_id: g.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: g.id)

CareGroupAssignment.create(clinician_id: r.id, patient_id: h.id)
CareGroupAssignment.create(clinician_id: s.id, patient_id: h.id)
CareGroupAssignment.create(clinician_id: t.id, patient_id: h.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: h.id)

CareGroupAssignment.create(clinician_id: u.id, patient_id: i.id)
CareGroupAssignment.create(clinician_id: v.id, patient_id: i.id)
CareGroupAssignment.create(clinician_id: w.id, patient_id: i.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: i.id)

CareGroupAssignment.create(clinician_id: u.id, patient_id: j.id)
CareGroupAssignment.create(clinician_id: v.id, patient_id: j.id)
CareGroupAssignment.create(clinician_id: w.id, patient_id: j.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: j.id)

CareGroupAssignment.create(clinician_id: x.id, patient_id: k.id)
CareGroupAssignment.create(clinician_id: y.id, patient_id: k.id)
CareGroupAssignment.create(clinician_id: z.id, patient_id: k.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: k.id)

CareGroupAssignment.create(clinician_id: o.id, patient_id: l.id)
CareGroupAssignment.create(clinician_id: p.id, patient_id: l.id)
CareGroupAssignment.create(clinician_id: q.id, patient_id: l.id)

CareGroupAssignment.create(clinician_id: r.id, patient_id: n.id)
CareGroupAssignment.create(clinician_id: s.id, patient_id: n.id)
CareGroupAssignment.create(clinician_id: t.id, patient_id: n.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: n.id)

CareGroupAssignment.create(clinician_id: u.id, patient_id: m.id)
CareGroupAssignment.create(clinician_id: v.id, patient_id: m.id)
CareGroupAssignment.create(clinician_id: w.id, patient_id: m.id)
CareGroupAssignment.create(clinician_id: o.id, patient_id: m.id)

#Create the Care Givers
CareGiver.create(patient_id: johndoe.id, inputter_id: grandchild.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: johndoe.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: cindypeters.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: yiwang.id, inputter_id: daughter.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: apwinderbrar.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: apwinderbrar.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: dilmarousseff.id, inputter_id: mother.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: benjaminlosseau.id, inputter_id: care_aid.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: benjaminlosseau.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: gcobisamaqanda.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: gcobisamaqanda.id, inputter_id: son.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: coreynichols.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: trentterris.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: hannajansson.id, inputter_id: care_aid.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: hannajansson.id, inputter_id: daughter.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: hannajansson.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: a.id, inputter_id: mother.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: a.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: b.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: c.id, inputter_id: father.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: d.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: e.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: f.id, inputter_id: grandchild.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: g.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
anna = CareGiver.create(patient_id: h.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: "sometimes stays with Gail when things are bad")
gailfriend = CareGiver.create(patient_id: h.id, inputter_id: daughter.id, first_name: "Anna", last_name: "Roberts", phone_number: Faker::Base.numerify('(905) ###-####'), other_information: "lives nearby and wants to help do the assessments")
CareGiver.create(patient_id: i.id, inputter_id: care_aid.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: j.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: k.id, inputter_id: son.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: l.id, inputter_id: partner.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: m.id, inputter_id: grandchild.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))
CareGiver.create(patient_id: n.id, inputter_id: friend.id, first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, phone_number: Faker::Base.numerify('(905) ###-####'), other_information: Faker::Lorem.sentence(0, false, 8))

# Create the scores for an ESAS assessment
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 9, other_symptom_comment: nil, esas_comment: "Constipation 9 took 3 laxitives and now 2 hours later feeling good result")
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 5, pain_comment: "little worse", tiredness: 5, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 4, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 3, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 5, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: "More pain today, meds not strong enough")
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 7, tiredness_comment: nil, drowsiness: 3, drowsiness_comment: nil, nausea: 5, nausea_comment: nil, lack_of_appetite: 6, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 9, other_symptom_comment: nil, esas_comment: "Constipation 9 took 3 laxitives and now 2 hours later feeling good result")
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 5, pain_comment: "little worse", tiredness: 7, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 6, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 3, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 5, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: "More pain today, meds not strong enough")
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 5, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 4, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 5, other_symptom_comment: nil, esas_comment: nil)
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 7, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 4, other_symptom_comment: "Still leading to dehydration", esas_comment: Faker::Lorem.sentence(3, false, 4), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 8, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 7, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 6, other_symptom_comment: "Still leading to dehydration", esas_comment: "She hasn't eaten anything all day and is barely drinking enough to replace the fluids lost from sweating")
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 9, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 9, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 3, other_symptom_comment: "Still leading to dehydration", esas_comment: Faker::Lorem.sentence(3, false, 4), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: cindypeters.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 9, other_symptom_comment: nil, esas_comment: nil)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 5, pain_comment: "little worse", tiredness: 5, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 4, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 3, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 5, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: "He is complaining about chest pains")
EsasAssessment.create(patient_id: yiwang.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 3, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 3, shortness_of_breath_comment: nil, depression: 3, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 7, other_symptom_comment: nil, esas_comment: nil)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: yiwang.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 7, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 4, other_symptom_comment: "Blood in urine", esas_comment: nil)
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: s.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 8, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 7, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 6, other_symptom_comment: "Brown in urine", esas_comment: "He is worried that he is feeling worse today")
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 9, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 9, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 3, other_symptom_comment: "Slightly better today", esas_comment: nil)
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: apwinderbrar.id, clinician_id: r.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)



EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(35.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: gailfriend.id, pain: 4, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: Faker::Lorem.sentence(0, false, 6), nausea: 1, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 3, lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 6), shortness_of_breath: 4, shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 6), depression: 4, depression_comment: nil, anxiety: 6, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 5, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 4, other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: "Constipation 9 took 3 laxitives and now 2 hours later feeling good result")
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: anna.id, pain: 4, pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: 5, tiredness_comment: Faker::Lorem.sentence(0, false, 6), drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 6, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: 5, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: gailfriend.id, pain: 5, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 4, drowsiness_comment: Faker::Lorem.sentence(0, false, 6), nausea: 1, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 6, lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 6), shortness_of_breath: 4, shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 6), depression: 4, depression_comment: nil, anxiety: 7, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 5, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 3, other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: anna.id, pain: 3, pain_comment: Faker::Lorem.sentence(0, false, 6), tiredness: 5, tiredness_comment: Faker::Lorem.sentence(0, false, 6), drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 5, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: 5, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: gailfriend.id, pain: 6, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 4, drowsiness_comment: Faker::Lorem.sentence(0, false, 6), nausea: 1, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 3, lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 6), shortness_of_breath: 3, shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 6), depression: 4, depression_comment: nil, anxiety: 6, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 5, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: anna.id, pain: 3, pain_comment: Faker::Lorem.sentence(0, false, 6), tiredness: 5, tiredness_comment: Faker::Lorem.sentence(0, false, 6), drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 4, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: 5, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: gailfriend.id, pain: 5, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 4, drowsiness_comment: Faker::Lorem.sentence(0, false, 6), nausea: 2, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 4, lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 6), shortness_of_breath: 3, shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 6), depression: 0, depression_comment: nil, anxiety: 6, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 3, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 7, other_symptom_comment: nil, esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: anna.id, pain: 5, pain_comment: Faker::Lorem.sentence(0, false, 6), tiredness: 7, tiredness_comment: Faker::Lorem.sentence(0, false, 6), drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 6, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: 5, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: gailfriend.id, pain: 7, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: Faker::Lorem.sentence(0, false, 6), nausea: 2, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 6, lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 6), shortness_of_breath: 1, shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 6), depression: 3, depression_comment: nil, anxiety: 4, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 3, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 8, other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: anna.id, pain: 4, pain_comment: Faker::Lorem.sentence(0, false, 6), tiredness: 6, tiredness_comment: Faker::Lorem.sentence(0, false, 6), drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 5, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: 5, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: gailfriend.id, pain: 4, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 3, drowsiness_comment: Faker::Lorem.sentence(0, false, 6), nausea: 4, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 3, lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 6), shortness_of_breath: 1, shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 6), depression: 1, depression_comment: nil, anxiety: 4, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 9, other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: anna.id, pain: 4, pain_comment: Faker::Lorem.sentence(0, false, 6), tiredness: 6, tiredness_comment: Faker::Lorem.sentence(0, false, 6), drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: 5, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: gailfriend.id, pain: 4, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 3, drowsiness_comment: Faker::Lorem.sentence(0, false, 6), nausea: 4, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 5, lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 6), shortness_of_breath: 0, shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 6), depression: 1, depression_comment: nil, anxiety: 3, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 2, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8))
EsasAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: anna.id, pain: 4, pain_comment: Faker::Lorem.sentence(0, false, 6), tiredness: 6, tiredness_comment: Faker::Lorem.sentence(0, false, 6), drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: Faker::Lorem.sentence(0, false, 6), lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: 5, anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: constipation.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: Faker::Lorem.sentence(0, false, 8))

EsasAssessment.create(patient_id: i.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 7, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 4, other_symptom_comment: "Still leading to dehydration", esas_comment: Faker::Lorem.sentence(3, false, 4), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: i.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 8, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 7, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 6, other_symptom_comment: "Still leading to dehydration", esas_comment: "She hasn't eaten anything all day and is barely drinking enough to replace the fluids lost from sweating")
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 9, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 9, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 3, other_symptom_comment: "Still leading to dehydration", esas_comment: Faker::Lorem.sentence(3, false, 4), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 9, other_symptom_comment: nil, esas_comment: nil)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 5, pain_comment: "little worse", tiredness: 5, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 4, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 3, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 5, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: "He is complaining about chest pains")
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 3, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 3, shortness_of_breath_comment: nil, depression: 3, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 7, other_symptom_comment: nil, esas_comment: nil)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 7, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 4, other_symptom_comment: "Blood in urine", esas_comment: nil)
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 8, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 7, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 6, other_symptom_comment: "Brown in urine", esas_comment: "He is worried that he is feeling worse today")
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 9, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 9, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 3, other_symptom_comment: "Slightly better today", esas_comment: nil)
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)

EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 7, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 4, other_symptom_comment: "Still leading to dehydration", esas_comment: Faker::Lorem.sentence(3, false, 4), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 8, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 7, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 6, other_symptom_comment: "Still leading to dehydration", esas_comment: "She hasn't eaten anything all day and is barely drinking enough to replace the fluids lost from sweating")
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 9, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 9, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 3, other_symptom_comment: "Still leading to dehydration", esas_comment: Faker::Lorem.sentence(3, false, 4), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 3, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 2, shortness_of_breath_comment: nil, depression: 2, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 9, other_symptom_comment: nil, esas_comment: nil)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 5, pain_comment: "little worse", tiredness: 5, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 4, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 3, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 5, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 6, other_symptom_comment: nil, esas_comment: "He is complaining about chest pains")
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 4, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 3, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 3, shortness_of_breath_comment: nil, depression: 3, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 4, wellbeing_comment: nil, other_symptom_id: sweating.id, other_symptom_score: 7, other_symptom_comment: nil, esas_comment: nil)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)

EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 7, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 6, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 7, lack_of_appetite_comment: nil, shortness_of_breath: 4, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 6, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 4, other_symptom_comment: "Blood in urine", esas_comment: nil)
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 8, pain_comment: nil, tiredness: 6, tiredness_comment: nil, drowsiness: 5, drowsiness_comment: nil, nausea: 7, nausea_comment: nil, lack_of_appetite: 8, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 6, other_symptom_comment: "Brown in urine", esas_comment: "He is worried that he is feeling worse today")
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: 9, pain_comment: nil, tiredness: 5, tiredness_comment: nil, drowsiness: 7, drowsiness_comment: nil, nausea: 8, nausea_comment: nil, lack_of_appetite: 9, lack_of_appetite_comment: nil, shortness_of_breath: 5, shortness_of_breath_comment: nil, depression: 5, depression_comment: nil, anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: 7, wellbeing_comment: nil, other_symptom_id: urine.id, other_symptom_score: 3, other_symptom_comment: "Slightly better today", esas_comment: nil)
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: false)
EsasAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, pain: rand(3...6), pain_comment: Faker::Lorem.sentence(0, false, 4), tiredness: rand(3...6), tiredness_comment: Faker::Lorem.sentence(0, false, 3), drowsiness: rand(5...7), drowsiness_comment: Faker::Lorem.sentence(0, false, 2), nausea: rand(0...8), nausea_comment: Faker::Lorem.sentence(0, false, 8), lack_of_appetite: rand(4...7), lack_of_appetite_comment: Faker::Lorem.sentence(0, false, 1), shortness_of_breath: rand(0...4), shortness_of_breath_comment: Faker::Lorem.sentence(0, false, 5), depression: rand(3...5), depression_comment: Faker::Lorem.sentence(0, false, 6), anxiety: rand(2...5), anxiety_comment: Faker::Lorem.sentence(0, false, 6), wellbeing: rand(2...4), wellbeing_comment: Faker::Lorem.sentence(0, false, 3), other_symptom_id: constipation.id, other_symptom_score: rand(6...10), other_symptom_comment: Faker::Lorem.sentence(0, false, 6), esas_comment: Faker::Lorem.sentence(0, false, 8), resolution: nil, priority_resolved: true)


# Create the scores for an PFRS assessment
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: 2, prfs_comment: nil)
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: johndoe.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: yiwang.id, clinician_id: q.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: dilmarousseff.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: coreynichols.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: trentterris.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: hannajansson.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: a.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: 3, prfs_comment: nil)
PrfsAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: cindypeters.id, clinician_id: p.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))


PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: 2, prfs_comment: nil)
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: b.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: c.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: d.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: e.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: f.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: g.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: h.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: i.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: j.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: 3, prfs_comment: nil)
PrfsAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: k.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: l.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: m.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))

PrfsAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: 3, prfs_comment: nil)
PrfsAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(50.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))
PrfsAssessment.create(patient_id: n.id, clinician_id: o.id, clinician_completed: true, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_giver_id: nil, activity_and_function: rand(1...5), prfs_comment: Faker::Lorem.sentence(0, false, 4))


# Create the comments
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Good. Please comment in the morning on how you feel")
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: userjohndoe.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Feeling good this morning. Thanks")
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Praesent malesuada, enim vel rhoncus convallis, felis leo tempus diam.")
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: userjohndoe.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Vivamus bibendum est augue, vitae ultricies leo elementum sed. Suspendisse.")
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Sed felis est, ullamcorper sed tellus vel, ullamcorper sodales mauris.")
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: userjohndoe.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Curabitur pharetra nisi a tellus elementum euismod. Curabitur eget bibendum.")
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: userjohndoe.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: userjohndoe.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: johndoe.id, clinician_id: o.id, from: userjohndoe.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Good. Please comment in the morning on how you feel")
Comment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, from: userbenjaminlosseau.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Feeling good this morning. Thanks")
Comment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, from: userbenjaminlosseau.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, from: userbenjaminlosseau.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: benjaminlosseau.id, clinician_id: o.id, from: userbenjaminlosseau.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, from: usero.id, created_at: "2015-09-04 13:26:32 -0600", general_comment: "Good. Please comment in the morning on how you feel")
Comment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, from: usergcobisamaqanda.id, created_at: "2015-09-06 14:39:01 -0600", general_comment: "Feeling good this morning. Thanks")
Comment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, from: usergcobisamaqanda.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, from: usergcobisamaqanda.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, from: usergcobisamaqanda.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: coreynichols.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: coreynichols.id, clinician_id: o.id, from: usercoreynichols.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: coreynichols.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: coreynichols.id, clinician_id: o.id, from: usercoreynichols.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: coreynichols.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: coreynichols.id, clinician_id: o.id, from: usercoreynichols.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: coreynichols.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: trentterris.id, clinician_id: o.id, from: usertrentterris.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: trentterris.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: trentterris.id, clinician_id: o.id, from: usertrentterris.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: trentterris.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: trentterris.id, clinician_id: o.id, from: usertrentterris.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: hannajansson.id, clinician_id: o.id, from: userhannajansson.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: hannajansson.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: hannajansson.id, clinician_id: o.id, from: userhannajansson.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: hannajansson.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: hannajansson.id, clinician_id: o.id, from: userhannajansson.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: hannajansson.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: a.id, clinician_id: o.id, from: usera.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: a.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: a.id, clinician_id: o.id, from: usera.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: a.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: a.id, clinician_id: o.id, from: usera.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: a.id, clinician_id: o.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: apwinderbrar.id, clinician_id: p.id, from: userp.id, created_at: "2015-09-04 09:08:56 -0600", general_comment: "Let me know if it's still bad tomorrow and we can schedule something from there")
Comment.create(patient_id: apwinderbrar.id, clinician_id: p.id, from: userapwinderbrar.id, created_at: "2015-09-06 08:43:21 -0600", general_comment: "Seems like it was just a bad day")
Comment.create(patient_id: apwinderbrar.id, clinician_id: p.id, from: userp.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: apwinderbrar.id, clinician_id: p.id, from: userbenjaminlosseau.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: apwinderbrar.id, clinician_id: p.id, from: userp.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: apwinderbrar.id, clinician_id: p.id, from: userbenjaminlosseau.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: apwinderbrar.id, clinician_id: p.id, from: userp.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: apwinderbrar.id, clinician_id: p.id, from: userbenjaminlosseau.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: b.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Good. Please comment in the morning on how you feel")
Comment.create(patient_id: b.id, clinician_id: q.id, from: userb.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Feeling good this morning. Thanks")
Comment.create(patient_id: b.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: b.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Praesent malesuada, enim vel rhoncus convallis, felis leo tempus diam.")
Comment.create(patient_id: b.id, clinician_id: q.id, from: userb.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Vivamus bibendum est augue, vitae ultricies leo elementum sed. Suspendisse.")
Comment.create(patient_id: b.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Sed felis est, ullamcorper sed tellus vel, ullamcorper sodales mauris.")
Comment.create(patient_id: b.id, clinician_id: q.id, from: userb.id, created_at: Faker::Time.between(10.days.ago, Time.now, :day), general_comment: "Curabitur pharetra nisi a tellus elementum euismod. Curabitur eget bibendum.")
Comment.create(patient_id: b.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: b.id, clinician_id: q.id, from: userb.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: b.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: b.id, clinician_id: q.id, from: userb.id, created_at: Faker::Time.between(5.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: b.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: b.id, clinician_id: q.id, from: userb.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: c.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Good. Please comment in the morning on how you feel")
Comment.create(patient_id: c.id, clinician_id: q.id, from: userc.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: "Feeling good this morning. Thanks")
Comment.create(patient_id: c.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: c.id, clinician_id: q.id, from: userc.id, created_at: Faker::Time.between(10.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: c.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: c.id, clinician_id: q.id, from: userc.id, created_at: Faker::Time.between(5.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: c.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: c.id, clinician_id: q.id, from: userc.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: d.id, clinician_id: q.id, from: userq.id, created_at: "2015-09-04 13:26:32 -0600", general_comment: "Good. Please comment in the morning on how you feel")
Comment.create(patient_id: d.id, clinician_id: q.id, from: userd.id, created_at: "2015-09-06 14:39:01 -0600", general_comment: "Feeling good this morning. Thanks")
Comment.create(patient_id: d.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: d.id, clinician_id: q.id, from: userd.id, created_at: Faker::Time.between(10.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: d.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: d.id, clinician_id: q.id, from: userd.id, created_at: Faker::Time.between(10.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: d.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: d.id, clinician_id: q.id, from: userd.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: e.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: e.id, clinician_id: q.id, from: usere.id, created_at: Faker::Time.between(10.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: e.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: e.id, clinician_id: q.id, from: usere.id, created_at: Faker::Time.between(5.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: e.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: e.id, clinician_id: q.id, from: usere.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: e.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: f.id, clinician_id: q.id, from: userf.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: f.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: f.id, clinician_id: q.id, from: userf.id, created_at: Faker::Time.between(10.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: f.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: f.id, clinician_id: q.id, from: userf.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: g.id, clinician_id: q.id, from: userg.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: g.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: g.id, clinician_id: q.id, from: userg.id, created_at: Faker::Time.between(10.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: g.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: g.id, clinician_id: q.id, from: userg.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: g.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: h.id, clinician_id: q.id, from: userh.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: h.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: h.id, clinician_id: q.id, from: userh.id, created_at: Faker::Time.between(5.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: h.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: h.id, clinician_id: q.id, from: userh.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: h.id, clinician_id: q.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: i.id, clinician_id: q.id, from: userq.id, created_at: "2015-09-04 09:08:56 -0600", general_comment: "Let me know if it's still bad tomorrow and we can schedule something from there")
Comment.create(patient_id: i.id, clinician_id: q.id, from: useri.id, created_at: "2015-09-06 08:43:21 -0600", general_comment: "Seems like it was just a bad day")
Comment.create(patient_id: i.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: i.id, clinician_id: q.id, from: useri.id, created_at: Faker::Time.between(5.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: i.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: i.id, clinician_id: q.id, from: useri.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: i.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: i.id, clinician_id: q.id, from: useri.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: j.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: j.id, clinician_id: q.id, from: userj.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: j.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: j.id, clinician_id: q.id, from: userj.id, created_at: Faker::Time.between(5.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: j.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: j.id, clinician_id: q.id, from: userj.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: j.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: k.id, clinician_id: q.id, from: userk.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: k.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: k.id, clinician_id: q.id, from: userk.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: k.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: k.id, clinician_id: q.id, from: userk.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: l.id, clinician_id: q.id, from: userl.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: l.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: l.id, clinician_id: q.id, from: userl.id, created_at: Faker::Time.between(5.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: l.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: l.id, clinician_id: q.id, from: userl.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: l.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: m.id, clinician_id: q.id, from: userm.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: m.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: m.id, clinician_id: q.id, from: userm.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: m.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: m.id, clinician_id: q.id, from: userm.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: m.id, clinician_id: q.id, from: usero.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

Comment.create(patient_id: n.id, clinician_id: q.id, from: userq.id, created_at: "2015-09-04 09:08:56 -0600", general_comment: "Let me know if it's still bad tomorrow and we can schedule something from there")
Comment.create(patient_id: n.id, clinician_id: q.id, from: usern.id, created_at: "2015-09-06 08:43:21 -0600", general_comment: "Seems like it was just a bad day")
Comment.create(patient_id: n.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: n.id, clinician_id: q.id, from: usern.id, created_at: Faker::Time.between(5.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: n.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: n.id, clinician_id: q.id, from: usern.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: n.id, clinician_id: q.id, from: userq.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))
Comment.create(patient_id: n.id, clinician_id: q.id, from: usern.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), general_comment: Faker::Lorem.sentence(3, false, 4))

# Create the comments
Note.create(patient_id: johndoe.id, clinician_id: o.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: johndoe.id, clinician_id: r.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: benjaminlosseau.id, clinician_id: r.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: benjaminlosseau.id, clinician_id: o.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: gcobisamaqanda.id, clinician_id: o.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: gcobisamaqanda.id, clinician_id: r.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: coreynichols.id, clinician_id: o.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: coreynichols.id, clinician_id: p.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: trentterris.id, clinician_id: o.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: trentterris.id, clinician_id: p.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: hannajansson.id, clinician_id: o.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: hannajansson.id, clinician_id: p.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: hannajansson.id, clinician_id: r.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: a.id, clinician_id: o.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: a.id, clinician_id: o.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: apwinderbrar.id, clinician_id: p.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: apwinderbrar.id, clinician_id: r.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: b.id, clinician_id: q.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: b.id, clinician_id: r.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: c.id, clinician_id: r.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: c.id, clinician_id: q.id, created_at: Faker::Time.between(25.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: d.id, clinician_id: q.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: d.id, clinician_id: r.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: e.id, clinician_id: q.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: e.id, clinician_id: r.id, created_at: Faker::Time.between(10.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: f.id, clinician_id: q.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: f.id, clinician_id: o.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: g.id, clinician_id: o.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: g.id, clinician_id: q.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: h.id, clinician_id: q.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: h.id, clinician_id: p.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: i.id, clinician_id: p.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: i.id, clinician_id: q.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: j.id, clinician_id: o.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: j.id, clinician_id: q.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: k.id, clinician_id: q.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: k.id, clinician_id: p.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: l.id, clinician_id: q.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: l.id, clinician_id: o.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: m.id, clinician_id: p.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: m.id, clinician_id: q.id, created_at: Faker::Time.between(40.days.ago, Time.now, :day), care_note: Faker::Lorem.sentence(3, false, 4))

Note.create(patient_id: n.id, clinician_id: q.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))
Note.create(patient_id: n.id, clinician_id: r.id, created_at: Faker::Time.between(25.days.ago, 50.days.ago, :day), care_note: Faker::Lorem.sentence(3, false, 4))

puts "Creating comments..."
# Create the comments


puts "Creating notes..."
# Create the comments

# Create the notification settings
puts "Creating notification settings..."
#default = NotificationSetting.create(clinician_id: o.id, esas_yellow_highest_symptom: 6, esas_yellow_increase_of: 3, esas_yellow_email: 0, esas_yellow_text: 0, esas_orange_highest_symptom: 8, esas_orange_increase_of: 4, esas_orange_email: 1, esas_orange_text: 0, esas_red_highest_symptom: 10, esas_red_increase_of: 5, esas_red_email: 1, esas_red_text: 1, prfs_yellow: 3, prfs_yellow_email: 0, prfs_yellow_text: 0, prfs_orange: 4, prfs_orange_email: 1, prfs_orange_text: 0, prfs_red: 5, prfs_red_email: 1, prfs_red_text: 1)
#default = NotificationSetting.create(clinician_id: o.id, esas_yellow_highest_symptom: 6, esas_yellow_increase_of: 3, esas_yellow_email: 0, esas_yellow_text: 0, esas_orange_highest_symptom: 8, esas_orange_increase_of: 4, esas_orange_email: 1, esas_orange_text: 0, esas_red_highest_symptom: 10, esas_red_increase_of: 5, esas_red_email: 1, esas_red_text: 1, prfs_yellow: 3, prfs_yellow_email: 0, prfs_yellow_text: 0, prfs_orange: 4, prfs_orange_email: 1, prfs_orange_text: 0, prfs_red: 5, prfs_red_email: 1, prfs_red_text: 1)

puts "There are now #{User.count} users, #{Clinician.count} clinicians, #{Patient.count} patients, #{Occupation.count} occupations, #{Speciality.count} specialities, #{Inputter.count} inputter types, #{Gender.count} genders, #{CareGroup.count} care groups, #{EsasAssessment.count} scores for an ESAS assessment, #{PrfsAssessment.count} scores for a PFRS assessment, #{Comment.count} comments between patients and clinicians, #{Note.count} care notes added to patients, #{NotificationSetting.count} notification settings added to clinicians, and #{OtherSymptom.count} other symptoms in the database."